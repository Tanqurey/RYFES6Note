/*
ES6允许按照一定的模式从数组和对象中提取值，然后赋值
解构失败，相应值默认返回undefined

1.默认值

*/

let [a, b = 3] = [1] //b=3
let {
  e = 15, f
} = {
  f: 13
}
/*
默认值可以引用解构赋值的其他变量，但该变量必须已经声明

2.对象的解构赋值
*/

let {
  c,
  d
} = {
  c: 10,
  d: 20
}

/*
允许嵌套赋值

*/

let obj = {
  p: [
    'x',
    {
      y: 13
    }
  ]
}

let {
  p
} = obj

console.log(p)

/*
字符串的嵌套赋值

*/

const [aa, bb, cc, dd, ee] = 'hello'

/*
解构赋值时，只要等号右边不是对象或数组，就首先转成对象。由于
null和undefined无法转成对象，所以报错

变量声明语句不得使用圆括号


*/